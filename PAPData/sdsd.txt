create or replace
PROCEDURE USP_TRN_CDAP_PHASE
(
CDAP_PHASEID_ IN TRN_CDAP_PHASE.CDAP_PHASEID%TYPE,
CDAP_PHASENO_ IN TRN_CDAP_PHASE.CDAP_PHASENO%TYPE,
CDAP_PERIODFROM_ IN TRN_CDAP_PHASE.CDAP_PERIODFROM%TYPE,
CDAP_PERIODTO_ IN TRN_CDAP_PHASE.CDAP_PERIODTO%TYPE,
PROJECTID_ IN TRN_CDAP_PHASE.PROJECTID%TYPE,
UPDATEDBY_ IN TRN_CDAP_PHASE.UPDATEDBY%TYPE,
NEWPHASEID_ OUT TRN_CDAP_PHASE.CDAP_PHASEID%TYPE
)
IS 
row_count NUMBER;

BEGIN
 SELECT COUNT(1) INTO row_count FROM TRN_CDAP_PHASE 
WHERE CDAP_PHASEID = CDAP_PHASEID_;
IF row_count > 0 THEN
UPDATE TRN_CDAP_PHASE SET        
        CDAP_PHASENO = CDAP_PHASENO_,
        CDAP_PERIODFROM = CDAP_PERIODFROM_,
        CDAP_PERIODTO = CDAP_PERIODTO_,
        UPDATEDBY = UPDATEDBY_,
        UPDATEDDATE = SYSDATE,
        PROJECTID = PROJECTID_
    WHERE CDAP_PHASEID = CDAP_PHASEID_;
    
    NEWPHASEID_ := CDAP_PHASEID_;
   -- RETURN ;
 ELSE 
 NEWPHASEID_ := SEQ_TRN_CDAP_PHASE.NEXTVAL;
 
 INSERT INTO TRN_CDAP_PHASE(
        CDAP_PHASEID,
        CDAP_PHASENO,
        CDAP_PERIODFROM,
        CDAP_PERIODTO,
        ISDELETED,
        CREATEDBY,
        CREATEDDATE,
        PROJECTID
      )
    VALUES (
        NEWPHASEID_,
        CDAP_PHASENO_,
        CDAP_PERIODFROM_,
        CDAP_PERIODTO_,
        'False',
        UPDATEDBY_,
        SYSDATE,
        PROJECTID_
    );
    
     --return;
   END IF;
   

END USP_TRN_CDAP_PHASE;